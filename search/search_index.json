{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"LP-Cloud Site de partage d'informations pour la r\u00e9alisation d'un projet DevOps en Licence Pro Admin Cloud - DevOps promo 21-22 \u00e0 l'UHA. Le projet mis en place consistera en la r\u00e9alisation d'une application web {{\u00e0 d\u00e9finir!}} utilisant les outils DevOps pour l'int\u00e9gration et le d\u00e9ploiement continu et qui sera mise en dev/prod sur un ou plusieurs Cloud providers (GCP, Aws, Azure, etc...).","title":"Accueil"},{"location":"#lp-cloud","text":"Site de partage d'informations pour la r\u00e9alisation d'un projet DevOps en Licence Pro Admin Cloud - DevOps promo 21-22 \u00e0 l'UHA. Le projet mis en place consistera en la r\u00e9alisation d'une application web {{\u00e0 d\u00e9finir!}} utilisant les outils DevOps pour l'int\u00e9gration et le d\u00e9ploiement continu et qui sera mise en dev/prod sur un ou plusieurs Cloud providers (GCP, Aws, Azure, etc...).","title":"LP-Cloud"},{"location":"devops/","text":"Le devops \u2014 ou DevOps (selon la graphie habituellement utilis\u00e9e en langue anglaise) \u2014 est un mouvement en ing\u00e9nierie informatique et une pratique technique visant \u00e0 l'unification du d\u00e9veloppement logiciel (dev) et de l'administration des infrastructures informatiques (ops), notamment l'administration syst\u00e8me. Apparu autour de 2007 en Belgique avec Patrick Debois, le mouvement Devops se caract\u00e9rise principalement par la promotion de l'automatisation et du suivi (monitoring) de toutes les \u00e9tapes de la cr\u00e9ation d'un logiciel, depuis le d\u00e9veloppement, l'int\u00e9gration, les tests, la livraison jusqu'au d\u00e9ploiement, l'exploitation et la maintenance des infrastructures. Les principes Devops soutiennent des cycles de d\u00e9veloppement plus courts, une augmentation de la fr\u00e9quence des d\u00e9ploiements et des livraisons continues, pour une meilleure atteinte des objectifs \u00e9conomiques de l'entreprise Lien avec l'agilit\u00e9 Le mouvement devops est n\u00e9 d'une part de la volont\u00e9 de globaliser les m\u00e9thodes agiles \u00e0 l'ensemble du syst\u00e8me d'information et d'autre part de l'application des principes de l'agilit\u00e9 \u00e0 la production. Il est cependant possible d'\u00eatre agile dans une \u00e9quipe uniquement de d\u00e9veloppement, comme il est possible de mettre en place certains principes devops dans un environnement de d\u00e9veloppement en cascade. Cadre projet web app Dans le cadre du projet mis en place, nous nous concentrerons sur l'utilisation d'outils permettant l'int\u00e9gration et le d\u00e9ploiement continu (CI/CD) de notre application. Nous nous efforcerons de simuler un cadre de travail de type Scrumban , m\u00e9thode hybride entre Scrum et Kanban.","title":"Le concept DevOps"},{"location":"devops/#_1","text":"Le devops \u2014 ou DevOps (selon la graphie habituellement utilis\u00e9e en langue anglaise) \u2014 est un mouvement en ing\u00e9nierie informatique et une pratique technique visant \u00e0 l'unification du d\u00e9veloppement logiciel (dev) et de l'administration des infrastructures informatiques (ops), notamment l'administration syst\u00e8me. Apparu autour de 2007 en Belgique avec Patrick Debois, le mouvement Devops se caract\u00e9rise principalement par la promotion de l'automatisation et du suivi (monitoring) de toutes les \u00e9tapes de la cr\u00e9ation d'un logiciel, depuis le d\u00e9veloppement, l'int\u00e9gration, les tests, la livraison jusqu'au d\u00e9ploiement, l'exploitation et la maintenance des infrastructures. Les principes Devops soutiennent des cycles de d\u00e9veloppement plus courts, une augmentation de la fr\u00e9quence des d\u00e9ploiements et des livraisons continues, pour une meilleure atteinte des objectifs \u00e9conomiques de l'entreprise","title":""},{"location":"devops/#lien-avec-lagilite","text":"Le mouvement devops est n\u00e9 d'une part de la volont\u00e9 de globaliser les m\u00e9thodes agiles \u00e0 l'ensemble du syst\u00e8me d'information et d'autre part de l'application des principes de l'agilit\u00e9 \u00e0 la production. Il est cependant possible d'\u00eatre agile dans une \u00e9quipe uniquement de d\u00e9veloppement, comme il est possible de mettre en place certains principes devops dans un environnement de d\u00e9veloppement en cascade.","title":"Lien avec l'agilit\u00e9"},{"location":"devops/#cadre-projet-web-app","text":"Dans le cadre du projet mis en place, nous nous concentrerons sur l'utilisation d'outils permettant l'int\u00e9gration et le d\u00e9ploiement continu (CI/CD) de notre application. Nous nous efforcerons de simuler un cadre de travail de type Scrumban , m\u00e9thode hybride entre Scrum et Kanban.","title":"Cadre projet web app"},{"location":"xaas/","text":"Xaas L\u2019acronyme XaaS fait r\u00e9f\u00e9rence \u00e0 l\u2019expression Everything-as-a-Service (Tout en tant que Service). Cette expression d\u00e9signe les diff\u00e9rents mod\u00e8les du cloud computing \u00ab en tant que service \u00bb. Les IaaS, les PaaS, les SaaS et les DaaS sont rassembl\u00e9s sous l\u2019appellation XaaS. Infrastructure as a service L'infrastructure as a service (IaaS) ou infrastructure en tant que service est un mod\u00e8le de cloud computing destin\u00e9 aux entreprises o\u00f9 : l'entreprise g\u00e8re le Middleware des serveurs, et surtout les logiciels applicatifs (ex\u00e9cutables, param\u00e9trages, l'int\u00e9gration SOA, les bases de donn\u00e9es) ; le fournisseur cloud g\u00e8re le mat\u00e9riel serveur, les couches de virtualisation, le stockage, les r\u00e9seaux. C'est un mod\u00e8le o\u00f9 l'entreprise dispose sur abonnement payant d'une infrastructure informatique (serveurs, stockage, sauvegarde, r\u00e9seau) qui se trouve physiquement chez le fournisseur qui est aussi responsable pour la s\u00e9curit\u00e9 de l'infrastructure. Cela peut repr\u00e9senter pour certaines directions des syst\u00e8mes d\u2019information (DSI) un moyen de r\u00e9aliser des \u00e9conomies, principalement en transformant des investissements en contrats de location. Platform as a service Platform as a service (PaaS), ou Plate-forme en tant que service, est l'un des types d'informatique en nuage (Cloud Computing), principalement destin\u00e9 aux d\u00e9veloppeurs ou aux entreprises de d\u00e9veloppement, o\u00f9 : l'entit\u00e9 cliente (d\u00e9veloppeurs ou entreprise) maintient les applications proprement dites le fournisseur cloud maintient la plate-forme d'ex\u00e9cution de ces applications : le mat\u00e9riel du ou des serveurs (la carte m\u00e8re, la m\u00e9moire vive\u2026), les logiciels de base (c'est-\u00e0-dire le ou les syst\u00e8mes d'exploitation, le ou les moteurs de bases de donn\u00e9es\u2026) et l'infrastructure (de connexion au r\u00e9seau, de stockage, de sauvegarde) Ce type de cloud computing permet de mettre \u00e0 disposition des entit\u00e9s clientes un environnement d'ex\u00e9cution rapidement disponible, en leur laissant la ma\u00eetrise des applications qu'elles peuvent installer, configurer et utiliser elles-m\u00eames. Il se distingue ainsi du mod\u00e8le logiciel en tant que service (SaaS) o\u00f9 la m\u00eame application est mise \u00e0 disposition des nombreux utilisateurs finaux. La terminologie qui entoure ce type de services est souvent le r\u00e9sultat de publications de cabinets de conseil sp\u00e9cialis\u00e9s comme Gartner. Le terme \u00ab PaaS \u00bb couvre ainsi selon ceux-l\u00e0 un ensemble de services allant du hpaPaaS (\u00ab High productivity application platform-as-a-service \u00bb en anglais, ou \u00ab Plate-forme applicative de haute productivit\u00e9 en tant que service \u00bb) en passant par le mbPaaS (\u00ab platforme orient\u00e9e services mobiles \u00bb) ou IoTPaaS qui vise l'Internet des objets. Une premi\u00e8re vague de services de ce type a vu son apparition vers 2006-2008 avec Heroku, Engine Yard ou Google App Engine, une seconde vague a vu son apparition avec la d\u00e9mocratisation des Conteneurs Linux autour de 2014 par le projet open-source Docker cr\u00e9\u00e9 par l'entrepreneur franco-am\u00e9ricain Solomon Hykes. Cette deuxi\u00e8me vague tend \u00e0 se confondre avec un autre mouvement contemporain le Serverless computing (\u00ab informatique sans serveur \u00bb) qui propose des promesses similaires (d\u00e9ploiement rapide de code sans la n\u00e9cessit\u00e9 de configurer l'infrastructure sous-jacente). Dans cette deuxi\u00e8me cat\u00e9gorie se trouvent des services des fournisseurs cloud horizontaux tels que AWS, Google Cloud ou Azure ainsi que des startups comme les Fran\u00e7ais Koyeb ou Platform.sh. Software as a service Le software as a service (SaaS) ou logiciel en tant que service, est un mod\u00e8le d'exploitation commerciale des logiciels dans lequel ceux-ci sont install\u00e9s sur des serveurs distants plut\u00f4t que sur la machine de l'utilisateur. Les clients ne paient pas de licence d'utilisation pour une version, mais utilisent librement le service en ligne ou, plus g\u00e9n\u00e9ralement, payent un abonnement. Les principales applications actuelles de ce mod\u00e8le sont : le gestionnaire de relation client (CRM) les solutions de cr\u00e9ation de site commerce en ligne la visioconf\u00e9rence la gestion des ressources humaines les communications unifi\u00e9es la messagerie et les logiciels collaboratifs la gestion des achats la gestion \u00e9lectronique de documents (GED) Le SaaS est donc la livraison conjointe de moyens, de services et de savoir-faire qui permettent aux entreprises d'externaliser int\u00e9gralement un aspect de leur syst\u00e8me d'information (messagerie, s\u00e9curit\u00e9\u2026) et de l'assimiler \u00e0 un co\u00fbt de fonctionnement plut\u00f4t qu'\u00e0 un investissement. Le contrat de services est essentiel pour d\u00e9finir le niveau de qualit\u00e9 de service (SLA). Le SaaS peut \u00eatre vu comme l'\u00e9quivalent commercial de l'architecture orient\u00e9e service (SOA). Data as a service Data as a service (DaaS), est une technique consistant \u00e0 faire payer un abonnement pour l'acc\u00e8s \u00e0 un d\u00e9p\u00f4t de donn\u00e9es via une interface fournie par le fournisseur. Comme tous les membres de la famille des \"as a service\" (AAS), DaaS est bas\u00e9e sur le concept o\u00f9 le produit - les donn\u00e9es dans le cas pr\u00e9sent - ,peut \u00eatre fourni \u00e0 l'utilisateur sur demande ind\u00e9pendamment de la distance s\u00e9parent l'utilisateur du le fournisseur des donn\u00e9es.","title":"XaaS"},{"location":"xaas/#xaas","text":"L\u2019acronyme XaaS fait r\u00e9f\u00e9rence \u00e0 l\u2019expression Everything-as-a-Service (Tout en tant que Service). Cette expression d\u00e9signe les diff\u00e9rents mod\u00e8les du cloud computing \u00ab en tant que service \u00bb. Les IaaS, les PaaS, les SaaS et les DaaS sont rassembl\u00e9s sous l\u2019appellation XaaS.","title":"Xaas"},{"location":"xaas/#infrastructure-as-a-service","text":"L'infrastructure as a service (IaaS) ou infrastructure en tant que service est un mod\u00e8le de cloud computing destin\u00e9 aux entreprises o\u00f9 : l'entreprise g\u00e8re le Middleware des serveurs, et surtout les logiciels applicatifs (ex\u00e9cutables, param\u00e9trages, l'int\u00e9gration SOA, les bases de donn\u00e9es) ; le fournisseur cloud g\u00e8re le mat\u00e9riel serveur, les couches de virtualisation, le stockage, les r\u00e9seaux. C'est un mod\u00e8le o\u00f9 l'entreprise dispose sur abonnement payant d'une infrastructure informatique (serveurs, stockage, sauvegarde, r\u00e9seau) qui se trouve physiquement chez le fournisseur qui est aussi responsable pour la s\u00e9curit\u00e9 de l'infrastructure. Cela peut repr\u00e9senter pour certaines directions des syst\u00e8mes d\u2019information (DSI) un moyen de r\u00e9aliser des \u00e9conomies, principalement en transformant des investissements en contrats de location.","title":"Infrastructure as a service"},{"location":"xaas/#platform-as-a-service","text":"Platform as a service (PaaS), ou Plate-forme en tant que service, est l'un des types d'informatique en nuage (Cloud Computing), principalement destin\u00e9 aux d\u00e9veloppeurs ou aux entreprises de d\u00e9veloppement, o\u00f9 : l'entit\u00e9 cliente (d\u00e9veloppeurs ou entreprise) maintient les applications proprement dites le fournisseur cloud maintient la plate-forme d'ex\u00e9cution de ces applications : le mat\u00e9riel du ou des serveurs (la carte m\u00e8re, la m\u00e9moire vive\u2026), les logiciels de base (c'est-\u00e0-dire le ou les syst\u00e8mes d'exploitation, le ou les moteurs de bases de donn\u00e9es\u2026) et l'infrastructure (de connexion au r\u00e9seau, de stockage, de sauvegarde) Ce type de cloud computing permet de mettre \u00e0 disposition des entit\u00e9s clientes un environnement d'ex\u00e9cution rapidement disponible, en leur laissant la ma\u00eetrise des applications qu'elles peuvent installer, configurer et utiliser elles-m\u00eames. Il se distingue ainsi du mod\u00e8le logiciel en tant que service (SaaS) o\u00f9 la m\u00eame application est mise \u00e0 disposition des nombreux utilisateurs finaux. La terminologie qui entoure ce type de services est souvent le r\u00e9sultat de publications de cabinets de conseil sp\u00e9cialis\u00e9s comme Gartner. Le terme \u00ab PaaS \u00bb couvre ainsi selon ceux-l\u00e0 un ensemble de services allant du hpaPaaS (\u00ab High productivity application platform-as-a-service \u00bb en anglais, ou \u00ab Plate-forme applicative de haute productivit\u00e9 en tant que service \u00bb) en passant par le mbPaaS (\u00ab platforme orient\u00e9e services mobiles \u00bb) ou IoTPaaS qui vise l'Internet des objets. Une premi\u00e8re vague de services de ce type a vu son apparition vers 2006-2008 avec Heroku, Engine Yard ou Google App Engine, une seconde vague a vu son apparition avec la d\u00e9mocratisation des Conteneurs Linux autour de 2014 par le projet open-source Docker cr\u00e9\u00e9 par l'entrepreneur franco-am\u00e9ricain Solomon Hykes. Cette deuxi\u00e8me vague tend \u00e0 se confondre avec un autre mouvement contemporain le Serverless computing (\u00ab informatique sans serveur \u00bb) qui propose des promesses similaires (d\u00e9ploiement rapide de code sans la n\u00e9cessit\u00e9 de configurer l'infrastructure sous-jacente). Dans cette deuxi\u00e8me cat\u00e9gorie se trouvent des services des fournisseurs cloud horizontaux tels que AWS, Google Cloud ou Azure ainsi que des startups comme les Fran\u00e7ais Koyeb ou Platform.sh.","title":"Platform as a service"},{"location":"xaas/#software-as-a-service","text":"Le software as a service (SaaS) ou logiciel en tant que service, est un mod\u00e8le d'exploitation commerciale des logiciels dans lequel ceux-ci sont install\u00e9s sur des serveurs distants plut\u00f4t que sur la machine de l'utilisateur. Les clients ne paient pas de licence d'utilisation pour une version, mais utilisent librement le service en ligne ou, plus g\u00e9n\u00e9ralement, payent un abonnement. Les principales applications actuelles de ce mod\u00e8le sont : le gestionnaire de relation client (CRM) les solutions de cr\u00e9ation de site commerce en ligne la visioconf\u00e9rence la gestion des ressources humaines les communications unifi\u00e9es la messagerie et les logiciels collaboratifs la gestion des achats la gestion \u00e9lectronique de documents (GED) Le SaaS est donc la livraison conjointe de moyens, de services et de savoir-faire qui permettent aux entreprises d'externaliser int\u00e9gralement un aspect de leur syst\u00e8me d'information (messagerie, s\u00e9curit\u00e9\u2026) et de l'assimiler \u00e0 un co\u00fbt de fonctionnement plut\u00f4t qu'\u00e0 un investissement. Le contrat de services est essentiel pour d\u00e9finir le niveau de qualit\u00e9 de service (SLA). Le SaaS peut \u00eatre vu comme l'\u00e9quivalent commercial de l'architecture orient\u00e9e service (SOA).","title":"Software as a service"},{"location":"xaas/#data-as-a-service","text":"Data as a service (DaaS), est une technique consistant \u00e0 faire payer un abonnement pour l'acc\u00e8s \u00e0 un d\u00e9p\u00f4t de donn\u00e9es via une interface fournie par le fournisseur. Comme tous les membres de la famille des \"as a service\" (AAS), DaaS est bas\u00e9e sur le concept o\u00f9 le produit - les donn\u00e9es dans le cas pr\u00e9sent - ,peut \u00eatre fourni \u00e0 l'utilisateur sur demande ind\u00e9pendamment de la distance s\u00e9parent l'utilisateur du le fournisseur des donn\u00e9es.","title":"Data as a service"},{"location":"outils-devops/ansible/","text":"Ansible est une plate-forme logicielle libre pour la configuration et la gestion des ordinateurs. Elle combine le d\u00e9ploiement de logiciels (en) multi-n\u0153uds, l'ex\u00e9cution des t\u00e2ches ad-hoc, et la gestion de configuration. Elle g\u00e8re les diff\u00e9rents n\u0153uds \u00e0 travers SSH et ne n\u00e9cessite l'installation d'aucun logiciel suppl\u00e9mentaire sur ceux-ci. Les modules communiquent via la sortie standard en notation JSON et peuvent \u00eatre \u00e9crits dans n'importe quel langage de programmation. Le syst\u00e8me utilise YAML pour exprimer des descriptions r\u00e9utilisables de syst\u00e8mes, appel\u00e9es playbook. Architecture Ansible Tower Ansible Tower est une API, un service Web et une console Web con\u00e7ue pour rendre Ansible plus facilement utilisable par les \u00e9quipes informatiques. C'est une console centrale de gestion des t\u00e2ches d'automatisation. Tower est un produit commercial pris en charge par Red Hat, Inc. Il en existe une version gratuite, servant de version b\u00eata pour sa grande s\u0153ur Tower, qui s'appelle AWX. Cette version est aussi utilisable par les entreprises, mais n'est pas garantie. Cadre projet web app {{\u00e0 d\u00e9finir!}}","title":"Ansible"},{"location":"outils-devops/ansible/#_1","text":"Ansible est une plate-forme logicielle libre pour la configuration et la gestion des ordinateurs. Elle combine le d\u00e9ploiement de logiciels (en) multi-n\u0153uds, l'ex\u00e9cution des t\u00e2ches ad-hoc, et la gestion de configuration. Elle g\u00e8re les diff\u00e9rents n\u0153uds \u00e0 travers SSH et ne n\u00e9cessite l'installation d'aucun logiciel suppl\u00e9mentaire sur ceux-ci. Les modules communiquent via la sortie standard en notation JSON et peuvent \u00eatre \u00e9crits dans n'importe quel langage de programmation. Le syst\u00e8me utilise YAML pour exprimer des descriptions r\u00e9utilisables de syst\u00e8mes, appel\u00e9es playbook.","title":""},{"location":"outils-devops/ansible/#architecture","text":"","title":"Architecture"},{"location":"outils-devops/ansible/#ansible-tower","text":"Ansible Tower est une API, un service Web et une console Web con\u00e7ue pour rendre Ansible plus facilement utilisable par les \u00e9quipes informatiques. C'est une console centrale de gestion des t\u00e2ches d'automatisation. Tower est un produit commercial pris en charge par Red Hat, Inc. Il en existe une version gratuite, servant de version b\u00eata pour sa grande s\u0153ur Tower, qui s'appelle AWX. Cette version est aussi utilisable par les entreprises, mais n'est pas garantie.","title":"Ansible Tower"},{"location":"outils-devops/ansible/#cadre-projet-web-app","text":"{{\u00e0 d\u00e9finir!}}","title":"Cadre projet web app"},{"location":"outils-devops/docker/","text":"Docker est une plateforme permettant de lancer certaines applications dans des conteneurs logiciels. Selon la firme de recherche sur l'industrie 451 Research, \u00ab Docker est un outil qui peut empaqueter une application et ses d\u00e9pendances dans un conteneur isol\u00e9, qui pourra \u00eatre ex\u00e9cut\u00e9 sur n'importe quel serveur \u00bb. Il ne s'agit pas de virtualisation, mais de conteneurisation, une forme plus l\u00e9g\u00e8re qui s'appuie sur certaines parties de la machine h\u00f4te pour son fonctionnement. Cette approche permet d'accro\u00eetre la flexibilit\u00e9 et la portabilit\u00e9 d\u2019ex\u00e9cution d'une application, laquelle va pouvoir tourner de fa\u00e7on fiable et pr\u00e9visible sur une grande vari\u00e9t\u00e9 de machines h\u00f4tes, que ce soit sur la machine locale, un cloud priv\u00e9 ou public, une machine nue, etc. Techniquement, Docker \u00e9tend le format de conteneur Linux standard, LXC, avec une API de haut niveau fournissant une solution pratique de virtualisation qui ex\u00e9cute les processus de fa\u00e7on isol\u00e9e. Pour ce faire, Docker utilise entre autres LXC, cgroups et le noyau Linux lui-m\u00eame1. Contrairement aux machines virtuelles traditionnelles, un conteneur Docker n'inclut pas de syst\u00e8me d'exploitation, mais s'appuie au contraire sur les fonctionnalit\u00e9s du syst\u00e8me d\u2019exploitation fournies par la machine h\u00f4te. La technologie de conteneur de Docker peut \u00eatre utilis\u00e9e pour \u00e9tendre des syst\u00e8mes distribu\u00e9s de fa\u00e7on \u00e0 ce qu'ils s'ex\u00e9cutent de mani\u00e8re autonome depuis une seule machine physique ou une seule instance par n\u0153ud. Cela permet aux n\u0153uds d'\u00eatre d\u00e9ploy\u00e9s au fur et \u00e0 mesure que les ressources sont disponibles, offrant un d\u00e9ploiement transparent et similaire aux PaaS pour des syst\u00e8mes comme Apache Cassandra, Riak, ou d'autres syst\u00e8mes distribu\u00e9s. La notion de conteneur L'objectif d'un conteneur est le m\u00eame que pour un serveur d\u00e9di\u00e9 virtuel : h\u00e9berger des services sur un m\u00eame serveur physique tout en les isolant les uns des autres. Un conteneur est cependant moins fig\u00e9 qu'une machine virtuelle en mati\u00e8re de taille de disque et de ressources allou\u00e9es. Un conteneur permet d'isoler chaque service : le serveur web, la base de donn\u00e9es, des applications pouvant \u00eatre ex\u00e9cut\u00e9es de fa\u00e7on ind\u00e9pendante dans leur conteneur d\u00e9di\u00e9, contenant uniquement les d\u00e9pendances n\u00e9cessaires. Chaque conteneur peut \u00eatre reli\u00e9 aux autres par des r\u00e9seaux virtuels. Il est possible de monter des volumes de disque de la machine h\u00f4te dans un conteneur. Si aucun processus n'est d\u00e9marr\u00e9 dans le conteneur, alors celui-ci s'arr\u00eate. On parle parfois de virtualisation d'OS : contrairement \u00e0 la virtualisation qui \u00e9mule par logiciel diff\u00e9rentes machines sur une machine physique, la conteneurisation \u00e9mule diff\u00e9rents OS sur un seul OS. Cadre projet web app {{\u00e0 d\u00e9finir!}}","title":"Docker"},{"location":"outils-devops/docker/#_1","text":"Docker est une plateforme permettant de lancer certaines applications dans des conteneurs logiciels. Selon la firme de recherche sur l'industrie 451 Research, \u00ab Docker est un outil qui peut empaqueter une application et ses d\u00e9pendances dans un conteneur isol\u00e9, qui pourra \u00eatre ex\u00e9cut\u00e9 sur n'importe quel serveur \u00bb. Il ne s'agit pas de virtualisation, mais de conteneurisation, une forme plus l\u00e9g\u00e8re qui s'appuie sur certaines parties de la machine h\u00f4te pour son fonctionnement. Cette approche permet d'accro\u00eetre la flexibilit\u00e9 et la portabilit\u00e9 d\u2019ex\u00e9cution d'une application, laquelle va pouvoir tourner de fa\u00e7on fiable et pr\u00e9visible sur une grande vari\u00e9t\u00e9 de machines h\u00f4tes, que ce soit sur la machine locale, un cloud priv\u00e9 ou public, une machine nue, etc. Techniquement, Docker \u00e9tend le format de conteneur Linux standard, LXC, avec une API de haut niveau fournissant une solution pratique de virtualisation qui ex\u00e9cute les processus de fa\u00e7on isol\u00e9e. Pour ce faire, Docker utilise entre autres LXC, cgroups et le noyau Linux lui-m\u00eame1. Contrairement aux machines virtuelles traditionnelles, un conteneur Docker n'inclut pas de syst\u00e8me d'exploitation, mais s'appuie au contraire sur les fonctionnalit\u00e9s du syst\u00e8me d\u2019exploitation fournies par la machine h\u00f4te. La technologie de conteneur de Docker peut \u00eatre utilis\u00e9e pour \u00e9tendre des syst\u00e8mes distribu\u00e9s de fa\u00e7on \u00e0 ce qu'ils s'ex\u00e9cutent de mani\u00e8re autonome depuis une seule machine physique ou une seule instance par n\u0153ud. Cela permet aux n\u0153uds d'\u00eatre d\u00e9ploy\u00e9s au fur et \u00e0 mesure que les ressources sont disponibles, offrant un d\u00e9ploiement transparent et similaire aux PaaS pour des syst\u00e8mes comme Apache Cassandra, Riak, ou d'autres syst\u00e8mes distribu\u00e9s.","title":""},{"location":"outils-devops/docker/#la-notion-de-conteneur","text":"L'objectif d'un conteneur est le m\u00eame que pour un serveur d\u00e9di\u00e9 virtuel : h\u00e9berger des services sur un m\u00eame serveur physique tout en les isolant les uns des autres. Un conteneur est cependant moins fig\u00e9 qu'une machine virtuelle en mati\u00e8re de taille de disque et de ressources allou\u00e9es. Un conteneur permet d'isoler chaque service : le serveur web, la base de donn\u00e9es, des applications pouvant \u00eatre ex\u00e9cut\u00e9es de fa\u00e7on ind\u00e9pendante dans leur conteneur d\u00e9di\u00e9, contenant uniquement les d\u00e9pendances n\u00e9cessaires. Chaque conteneur peut \u00eatre reli\u00e9 aux autres par des r\u00e9seaux virtuels. Il est possible de monter des volumes de disque de la machine h\u00f4te dans un conteneur. Si aucun processus n'est d\u00e9marr\u00e9 dans le conteneur, alors celui-ci s'arr\u00eate. On parle parfois de virtualisation d'OS : contrairement \u00e0 la virtualisation qui \u00e9mule par logiciel diff\u00e9rentes machines sur une machine physique, la conteneurisation \u00e9mule diff\u00e9rents OS sur un seul OS.","title":"La notion de conteneur "},{"location":"outils-devops/docker/#cadre-projet-web-app","text":"{{\u00e0 d\u00e9finir!}}","title":"Cadre projet web app"},{"location":"outils-devops/git/","text":"Git est un logiciel de gestion de versions d\u00e9centralis\u00e9. C'est un logiciel libre cr\u00e9\u00e9 par Linus Torvalds, auteur du noyau Linux, et distribu\u00e9 selon les termes de la licence publique g\u00e9n\u00e9rale GNU version 2. Le principal contributeur actuel de git et depuis plus de 16 ans est Junio C Hamano. En 2016, il s\u2019agit du logiciel de gestion de versions le plus populaire qui est utilis\u00e9 par plus de douze millions de personnes Quelques commandes Git dispose notamment des commandes suivantes : git init\u200b - cr\u00e9e un nouveau d\u00e9p\u00f4t git clone -\u200b clone un d\u00e9p\u00f4t distant git add\u200b - ajoute de nouveaux objets blobs dans la base des objets pour chaque fichier modifi\u00e9 depuis le dernier commit. Les objets pr\u00e9c\u00e9dents restent inchang\u00e9s git commit\u200b - int\u00e8gre la somme de contr\u00f4le SHA-1 d'un objet tree et les sommes de contr\u00f4le des objets commits parents pour cr\u00e9er un nouvel objet commit git branch\u200b - liste les branches git merge\u200b - fusionne une branche dans une autre git rebase\u200b - d\u00e9place les commits de la branche courante devant les nouveaux commits d\u2019une autre branche git log\u200b - affiche la liste des commits effectu\u00e9s sur une branche git push\u200b - publie les nouvelles r\u00e9visions sur le remote. (La commande prend diff\u00e9rents param\u00e8tres) git pull\u200b - r\u00e9cup\u00e8re les derni\u00e8res modifications distantes du projet (depuis le Remote) et les fusionne dans la branche courante git stash -\u200b stocke de c\u00f4t\u00e9 un \u00e9tat non commit\u00e9 afin d\u2019effectuer d\u2019autres t\u00e2ches git checkout -\u200b annule les modifications effectu\u00e9es, d\u00e9placement sur une r\u00e9f\u00e9rence (branche, hash) git switch -\u200b changement de branche git remote -\u200b gestion des remotes Sites d\u2019h\u00e9bergement Il existe diff\u00e9rents sites (\u00e9galement appel\u00e9es forges) g\u00e9n\u00e9ralistes d'h\u00e9bergement, ainsi que des sites d\u00e9di\u00e9s \u00e0 des d\u00e9veloppements en particulier, acceptant des projets li\u00e9s d'utilisateur, comme l'instance cgit de Kernel.org (noyau Linux) ou les instances Gitlab de Freedesktop.org, Gnome, KDE ou encore de Blender. Framagit , site communautaire associatif libre de Framasoft, bas\u00e9 sur Gitlab GitHub est un service web d'h\u00e9bergement et de gestion de d\u00e9veloppement de logiciels d\u00e9velopp\u00e9 en Ruby on Rails et Erlang, qui appartient \u00e0 Microsoft depuis juin 2018 GitLab.com \u00e9quivalent \u00e0 GitHub et d\u00e9velopp\u00e9 en Ruby, \u00e9volution du code du service Gitorious, rachet\u00e9 en mars 2015, le code source est disponible et utilis\u00e9 par diff\u00e9rentes autres forges GNU Savannah , permettant \u00e9galement l'utilisation de Mercurial, d\u00e9p\u00f4t officiel de la Free Software Foundation SourceForge.net , probablement le plus ancien, ouvert en 1999, il utilisait CVS \u00e0 ses d\u00e9buts, avant de passer \u00e0 Subversion (SVN), puis r\u00e9cemment \u00e0 Git \u00e9galement. Il utilise aujourd'hui Apache Allura Cadre projet web app Dans le cadre de notre projet, nous utiliserons indiff\u00e9remment GitHub et GitLab . GitHub repo docs GitLab repo groupe LP GitHub repo app","title":"Git"},{"location":"outils-devops/git/#_1","text":"Git est un logiciel de gestion de versions d\u00e9centralis\u00e9. C'est un logiciel libre cr\u00e9\u00e9 par Linus Torvalds, auteur du noyau Linux, et distribu\u00e9 selon les termes de la licence publique g\u00e9n\u00e9rale GNU version 2. Le principal contributeur actuel de git et depuis plus de 16 ans est Junio C Hamano. En 2016, il s\u2019agit du logiciel de gestion de versions le plus populaire qui est utilis\u00e9 par plus de douze millions de personnes","title":""},{"location":"outils-devops/git/#quelques-commandes","text":"Git dispose notamment des commandes suivantes : git init\u200b - cr\u00e9e un nouveau d\u00e9p\u00f4t git clone -\u200b clone un d\u00e9p\u00f4t distant git add\u200b - ajoute de nouveaux objets blobs dans la base des objets pour chaque fichier modifi\u00e9 depuis le dernier commit. Les objets pr\u00e9c\u00e9dents restent inchang\u00e9s git commit\u200b - int\u00e8gre la somme de contr\u00f4le SHA-1 d'un objet tree et les sommes de contr\u00f4le des objets commits parents pour cr\u00e9er un nouvel objet commit git branch\u200b - liste les branches git merge\u200b - fusionne une branche dans une autre git rebase\u200b - d\u00e9place les commits de la branche courante devant les nouveaux commits d\u2019une autre branche git log\u200b - affiche la liste des commits effectu\u00e9s sur une branche git push\u200b - publie les nouvelles r\u00e9visions sur le remote. (La commande prend diff\u00e9rents param\u00e8tres) git pull\u200b - r\u00e9cup\u00e8re les derni\u00e8res modifications distantes du projet (depuis le Remote) et les fusionne dans la branche courante git stash -\u200b stocke de c\u00f4t\u00e9 un \u00e9tat non commit\u00e9 afin d\u2019effectuer d\u2019autres t\u00e2ches git checkout -\u200b annule les modifications effectu\u00e9es, d\u00e9placement sur une r\u00e9f\u00e9rence (branche, hash) git switch -\u200b changement de branche git remote -\u200b gestion des remotes","title":"Quelques commandes"},{"location":"outils-devops/git/#sites-dhebergement","text":"Il existe diff\u00e9rents sites (\u00e9galement appel\u00e9es forges) g\u00e9n\u00e9ralistes d'h\u00e9bergement, ainsi que des sites d\u00e9di\u00e9s \u00e0 des d\u00e9veloppements en particulier, acceptant des projets li\u00e9s d'utilisateur, comme l'instance cgit de Kernel.org (noyau Linux) ou les instances Gitlab de Freedesktop.org, Gnome, KDE ou encore de Blender. Framagit , site communautaire associatif libre de Framasoft, bas\u00e9 sur Gitlab GitHub est un service web d'h\u00e9bergement et de gestion de d\u00e9veloppement de logiciels d\u00e9velopp\u00e9 en Ruby on Rails et Erlang, qui appartient \u00e0 Microsoft depuis juin 2018 GitLab.com \u00e9quivalent \u00e0 GitHub et d\u00e9velopp\u00e9 en Ruby, \u00e9volution du code du service Gitorious, rachet\u00e9 en mars 2015, le code source est disponible et utilis\u00e9 par diff\u00e9rentes autres forges GNU Savannah , permettant \u00e9galement l'utilisation de Mercurial, d\u00e9p\u00f4t officiel de la Free Software Foundation SourceForge.net , probablement le plus ancien, ouvert en 1999, il utilisait CVS \u00e0 ses d\u00e9buts, avant de passer \u00e0 Subversion (SVN), puis r\u00e9cemment \u00e0 Git \u00e9galement. Il utilise aujourd'hui Apache Allura","title":"Sites d\u2019h\u00e9bergement"},{"location":"outils-devops/git/#cadre-projet-web-app","text":"Dans le cadre de notre projet, nous utiliserons indiff\u00e9remment GitHub et GitLab . GitHub repo docs GitLab repo groupe LP GitHub repo app","title":"Cadre projet web app"},{"location":"outils-devops/jenkins/","text":"Jenkins est un outil open source de serveur d'automatisation. Il aide \u00e0 automatiser les parties du d\u00e9veloppement logiciel li\u00e9es au build, aux tests et au d\u00e9ploiement, et facilite l'int\u00e9gration continue et la livraison continue. \u00c9crit en Java, Jenkins fonctionne dans un conteneur de servlets tel qu\u2019Apache Tomcat, ou en mode autonome avec son propre serveur Web embarqu\u00e9. Il s'interface avec des syst\u00e8mes de gestion de versions tels que CVS, Git et Subversion, et ex\u00e9cute des projets bas\u00e9s sur Apache Ant et Apache Maven aussi bien que des scripts arbitraires en shell Unix ou batch Windows. Les g\u00e9n\u00e9rations de projets peuvent \u00eatre amorc\u00e9es par diff\u00e9rents moyens, tels que des m\u00e9canismes de planification similaires au cron, des syst\u00e8mes de d\u00e9pendances entre g\u00e9n\u00e9rations, ou par des requ\u00eates sur certaines URL sp\u00e9cifiques. Interface La notion d'int\u00e9gration continue L'int\u00e9gration continue est un ensemble de pratiques utilis\u00e9es en g\u00e9nie logiciel consistant \u00e0 v\u00e9rifier \u00e0 chaque modification de code source que le r\u00e9sultat des modifications ne produit pas de r\u00e9gression dans l'application d\u00e9velopp\u00e9e. Le concept a pour la premi\u00e8re fois \u00e9t\u00e9 mentionn\u00e9 par Grady Booch1 et se r\u00e9f\u00e8re g\u00e9n\u00e9ralement \u00e0 la pratique de l'extreme programming. Le principal but de cette pratique est de d\u00e9tecter les probl\u00e8mes d'int\u00e9gration au plus t\u00f4t lors du d\u00e9veloppement. De plus, elle permet d'automatiser l'ex\u00e9cution des suites de tests et de voir l'\u00e9volution du d\u00e9veloppement du logiciel. L'int\u00e9gration continue est de plus en plus utilis\u00e9e en entreprise afin d'am\u00e9liorer la qualit\u00e9 du code et du produit final. Int\u00e9r\u00eat L'int\u00e9gration continue repose souvent sur la mise en place d'une brique logicielle permettant l'automatisation de t\u00e2ches : compilation, tests unitaires et fonctionnels, validation produit, tests de performances\u2026 \u00c0 chaque changement du code, cette brique logicielle va ex\u00e9cuter un ensemble de t\u00e2ches et produire un ensemble de r\u00e9sultats, que le d\u00e9veloppeur peut par la suite consulter. Cette int\u00e9gration permet ainsi de ne pas oublier d'\u00e9l\u00e9ments lors de la mise en production et donc ainsi am\u00e9liorer la qualit\u00e9 du produit3. Pour appliquer cette technique, il faut d'abord que : le code source soit partag\u00e9 (en utilisant des logiciels de gestion de versions tels que CVS, Subversion, git, Mercurial, etc.) les d\u00e9veloppeurs int\u00e8grent (commit) quotidiennement (au moins) leurs modifications des tests d'int\u00e9gration soient d\u00e9velopp\u00e9s pour valider l'application (avec JUnit par exemple) Un outil d'int\u00e9gration continue est ensuite n\u00e9cessaire tel que Jenkins. D'autres outils, comme SonarQube ou Jacoco, peuvent \u00eatre mis en place afin de superviser la qualit\u00e9 du code2. Les principaux avantages d'une telle technique de d\u00e9veloppement sont : le test imm\u00e9diat des modifications ; la notification rapide en cas de code incompatible ou manquant les probl\u00e8mes d'int\u00e9gration sont d\u00e9tect\u00e9s et r\u00e9par\u00e9s de fa\u00e7on continue, \u00e9vitant les probl\u00e8mes de derni\u00e8re minute une version est toujours disponible pour un test, une d\u00e9monstration ou une distribution Cadre projet web app {{\u00e0 d\u00e9finir!}}","title":"Jenkins"},{"location":"outils-devops/jenkins/#_1","text":"Jenkins est un outil open source de serveur d'automatisation. Il aide \u00e0 automatiser les parties du d\u00e9veloppement logiciel li\u00e9es au build, aux tests et au d\u00e9ploiement, et facilite l'int\u00e9gration continue et la livraison continue. \u00c9crit en Java, Jenkins fonctionne dans un conteneur de servlets tel qu\u2019Apache Tomcat, ou en mode autonome avec son propre serveur Web embarqu\u00e9. Il s'interface avec des syst\u00e8mes de gestion de versions tels que CVS, Git et Subversion, et ex\u00e9cute des projets bas\u00e9s sur Apache Ant et Apache Maven aussi bien que des scripts arbitraires en shell Unix ou batch Windows. Les g\u00e9n\u00e9rations de projets peuvent \u00eatre amorc\u00e9es par diff\u00e9rents moyens, tels que des m\u00e9canismes de planification similaires au cron, des syst\u00e8mes de d\u00e9pendances entre g\u00e9n\u00e9rations, ou par des requ\u00eates sur certaines URL sp\u00e9cifiques.","title":""},{"location":"outils-devops/jenkins/#interface","text":"","title":"Interface"},{"location":"outils-devops/jenkins/#la-notion-dintegration-continue","text":"L'int\u00e9gration continue est un ensemble de pratiques utilis\u00e9es en g\u00e9nie logiciel consistant \u00e0 v\u00e9rifier \u00e0 chaque modification de code source que le r\u00e9sultat des modifications ne produit pas de r\u00e9gression dans l'application d\u00e9velopp\u00e9e. Le concept a pour la premi\u00e8re fois \u00e9t\u00e9 mentionn\u00e9 par Grady Booch1 et se r\u00e9f\u00e8re g\u00e9n\u00e9ralement \u00e0 la pratique de l'extreme programming. Le principal but de cette pratique est de d\u00e9tecter les probl\u00e8mes d'int\u00e9gration au plus t\u00f4t lors du d\u00e9veloppement. De plus, elle permet d'automatiser l'ex\u00e9cution des suites de tests et de voir l'\u00e9volution du d\u00e9veloppement du logiciel. L'int\u00e9gration continue est de plus en plus utilis\u00e9e en entreprise afin d'am\u00e9liorer la qualit\u00e9 du code et du produit final.","title":"La notion d'int\u00e9gration continue"},{"location":"outils-devops/jenkins/#interet","text":"L'int\u00e9gration continue repose souvent sur la mise en place d'une brique logicielle permettant l'automatisation de t\u00e2ches : compilation, tests unitaires et fonctionnels, validation produit, tests de performances\u2026 \u00c0 chaque changement du code, cette brique logicielle va ex\u00e9cuter un ensemble de t\u00e2ches et produire un ensemble de r\u00e9sultats, que le d\u00e9veloppeur peut par la suite consulter. Cette int\u00e9gration permet ainsi de ne pas oublier d'\u00e9l\u00e9ments lors de la mise en production et donc ainsi am\u00e9liorer la qualit\u00e9 du produit3. Pour appliquer cette technique, il faut d'abord que : le code source soit partag\u00e9 (en utilisant des logiciels de gestion de versions tels que CVS, Subversion, git, Mercurial, etc.) les d\u00e9veloppeurs int\u00e8grent (commit) quotidiennement (au moins) leurs modifications des tests d'int\u00e9gration soient d\u00e9velopp\u00e9s pour valider l'application (avec JUnit par exemple) Un outil d'int\u00e9gration continue est ensuite n\u00e9cessaire tel que Jenkins. D'autres outils, comme SonarQube ou Jacoco, peuvent \u00eatre mis en place afin de superviser la qualit\u00e9 du code2. Les principaux avantages d'une telle technique de d\u00e9veloppement sont : le test imm\u00e9diat des modifications ; la notification rapide en cas de code incompatible ou manquant les probl\u00e8mes d'int\u00e9gration sont d\u00e9tect\u00e9s et r\u00e9par\u00e9s de fa\u00e7on continue, \u00e9vitant les probl\u00e8mes de derni\u00e8re minute une version est toujours disponible pour un test, une d\u00e9monstration ou une distribution","title":"Int\u00e9r\u00eat"},{"location":"outils-devops/jenkins/#cadre-projet-web-app","text":"{{\u00e0 d\u00e9finir!}}","title":"Cadre projet web app"},{"location":"outils-devops/kubernetes/","text":"Kubernetes (commun\u00e9ment appel\u00e9 \u00ab K8s \u00bb) est un syst\u00e8me open source qui vise \u00e0 fournir une \u00ab plate-forme permettant d'automatiser le d\u00e9ploiement, la mont\u00e9e en charge et la mise en \u0153uvre de conteneurs d'application sur des clusters de serveurs \u00bb3. Il fonctionne avec toute une s\u00e9rie de technologies de conteneurisation, et est souvent utilis\u00e9 avec Docker. Il a \u00e9t\u00e9 con\u00e7u \u00e0 l'origine par Google, puis offert \u00e0 la Cloud Native Computing Foundation. Conception Kubernetes d\u00e9finit un jeu d'outils (\"primitives\") qui, ensemble, fournissent des m\u00e9canismes pour d\u00e9ployer, maintenir et mettre \u00e0 l\u2019\u00e9chelle des applications. Ces \u00e9l\u00e9ments qui composent Kubernetes sont con\u00e7us pour \u00eatre combin\u00e9s et extensibles et donc permettre de supporter une grande vari\u00e9t\u00e9 de charge de travail. Cette extensibilit\u00e9 est fournie en grande partie par l'API de Kubernetes, qui est utilis\u00e9e par les composants internes aussi bien que par les extensions et les conteneurs tournant sur Kubernetes. Architecture Cadre projet web app {{\u00e0 d\u00e9finir!}}","title":"Kubernetes"},{"location":"outils-devops/kubernetes/#_1","text":"Kubernetes (commun\u00e9ment appel\u00e9 \u00ab K8s \u00bb) est un syst\u00e8me open source qui vise \u00e0 fournir une \u00ab plate-forme permettant d'automatiser le d\u00e9ploiement, la mont\u00e9e en charge et la mise en \u0153uvre de conteneurs d'application sur des clusters de serveurs \u00bb3. Il fonctionne avec toute une s\u00e9rie de technologies de conteneurisation, et est souvent utilis\u00e9 avec Docker. Il a \u00e9t\u00e9 con\u00e7u \u00e0 l'origine par Google, puis offert \u00e0 la Cloud Native Computing Foundation.","title":""},{"location":"outils-devops/kubernetes/#conception","text":"Kubernetes d\u00e9finit un jeu d'outils (\"primitives\") qui, ensemble, fournissent des m\u00e9canismes pour d\u00e9ployer, maintenir et mettre \u00e0 l\u2019\u00e9chelle des applications. Ces \u00e9l\u00e9ments qui composent Kubernetes sont con\u00e7us pour \u00eatre combin\u00e9s et extensibles et donc permettre de supporter une grande vari\u00e9t\u00e9 de charge de travail. Cette extensibilit\u00e9 est fournie en grande partie par l'API de Kubernetes, qui est utilis\u00e9e par les composants internes aussi bien que par les extensions et les conteneurs tournant sur Kubernetes.","title":"Conception"},{"location":"outils-devops/kubernetes/#architecture","text":"","title":"Architecture"},{"location":"outils-devops/kubernetes/#cadre-projet-web-app","text":"{{\u00e0 d\u00e9finir!}}","title":"Cadre projet web app"},{"location":"outils-devops/terraform/","text":"Terraform est un environnement logiciel d'\u00ab infrastructure as code \u00bb publi\u00e9 en open-source par la soci\u00e9t\u00e9 HashiCorp. Cet outil permet d'automatiser la construction des ressources d'une infrastructure de centre de donn\u00e9es comme un r\u00e9seau, des machines virtuelles, un groupe de s\u00e9curit\u00e9 ou une base de donn\u00e9es. L'infrastructure est d\u00e9crite sous forme du langage de configuration HCL (Hashicorp Configuration Language). Il est aussi possible d'utiliser le langage JSON2. Terraform permet notamment de d\u00e9finir des topologies cloud pour les principaux fournisseurs d'infrastructure cloud, tels qu'Amazon Web Services, IBM Cloud (anciennement Bluemix ), Google Cloud Platform, Linode, Microsoft Azure, Oracle Cloud Infrastructure, OVH ou VMware, vSphere ainsi que OpenStack. Les scripts Terraform sont d\u00e9pendants du fournisseur (\u00ab provider \u00bb) de l'infrastructure cloud. Par exemple, un fichier Terraform d\u00e9fini pour une topologie Amazon ne peut pas \u00eatre r\u00e9utilis\u00e9 pour une topologie OpenStack ou Microsoft Azure. Cadre projet web app {{\u00e0 d\u00e9finir!}}","title":"Terraform"},{"location":"outils-devops/terraform/#_1","text":"Terraform est un environnement logiciel d'\u00ab infrastructure as code \u00bb publi\u00e9 en open-source par la soci\u00e9t\u00e9 HashiCorp. Cet outil permet d'automatiser la construction des ressources d'une infrastructure de centre de donn\u00e9es comme un r\u00e9seau, des machines virtuelles, un groupe de s\u00e9curit\u00e9 ou une base de donn\u00e9es. L'infrastructure est d\u00e9crite sous forme du langage de configuration HCL (Hashicorp Configuration Language). Il est aussi possible d'utiliser le langage JSON2. Terraform permet notamment de d\u00e9finir des topologies cloud pour les principaux fournisseurs d'infrastructure cloud, tels qu'Amazon Web Services, IBM Cloud (anciennement Bluemix ), Google Cloud Platform, Linode, Microsoft Azure, Oracle Cloud Infrastructure, OVH ou VMware, vSphere ainsi que OpenStack. Les scripts Terraform sont d\u00e9pendants du fournisseur (\u00ab provider \u00bb) de l'infrastructure cloud. Par exemple, un fichier Terraform d\u00e9fini pour une topologie Amazon ne peut pas \u00eatre r\u00e9utilis\u00e9 pour une topologie OpenStack ou Microsoft Azure.","title":""},{"location":"outils-devops/terraform/#cadre-projet-web-app","text":"{{\u00e0 d\u00e9finir!}}","title":"Cadre projet web app"}]}